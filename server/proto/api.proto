syntax = "proto3";

option go_package = "internal/api";

service Api {
  rpc Compile(CompileRequest) returns (CompileResponse);
  rpc GetConfiguration(GetConfigurationRequest) returns (GetConfigurationResponse);
}

message CompileRequest {
  int32 log_offset = 1;
  bool force = 2;
  string project_name = 3;
  string workspace = 4;
}

message CompileResponse {
  CompileStatus status = 1;
  repeated Log logs = 2;
  repeated string sources = 3;
}

enum CompileStatus {
  STATUS_UNKNOWN = 0;
  STATUS_READY = 1;
  STATUS_ERROR = 2;
  STATUS_RUNNING = 3;
}

message Log {
  string message = 1;
  int32 index = 2;
  LogLevel level = 3;
}

enum LogLevel {
  LEVEL_DEBUG = 0;
  LEVEL_INFO = 1;
  LEVEL_WARN = 2;
  LEVEL_ERROR = 3;
}

enum RpcProtocol {
  RPC_PROTOCOL_TWIRP = 0;
  RPC_PROTOCOL_GRPC = 1;
}

message GetConfigurationRequest {}

message GetConfigurationResponse {
  Configuration configuration = 1;
}

message Configuration {
  repeated ConfigurationProject projects = 1;
}

message ConfigurationProject {
  string name = 1;
  RpcProtocol protocol = 2;
  string url = 3;
  string workspace = 4;
}